$baseColors: (
  red: $red,
  purple: $purple,
  pageup: $navy,
  slate: $slate,
  blue: $blue,
  light-blue: $azure,
  orange: $orange,
  green: $green,
  grey: $grey
);

@function colorMap($baseColors, $variations) {
  $colors:();

  @each $color, $value in $baseColors {
    $maxVar: 36;
    $mid: $variations / 2;
    $dist: $mid - 1;
    $step: $maxVar / $dist;

    // lighten and darken
    @for $i from 1 through $dist {
      $percent: $maxVar - ($step * ($i - 1));
      $darken: ($variations - $i) * 100;
      $lighten: $i * 100;

      $colors: map-merge($colors, (
         #{$color}-#{$lighten}: lighten($value, $percent),
         #{$color}-#{$darken}:  darken($value, $percent)
      ));
    }

    // middle eg 500
    $colors: map-merge($colors, (#{$color}-#{$variations/2*100}: $value));
  }
  @return $colors;
}

@each $color, $value in colorMap($baseColors, 10) {
  .#{$color} {
    &::before {
      content: '#{$value}';
      font-family: monospace;
      float: right;
      text-transform: uppercase;
      font-size: 1rem;
    }
    background-color: $value;
  }
}

.container {
  display: flex;
  flex-wrap: wrap;
}

.swatches {
  flex: auto;
  margin: 20px;
  font-family: arial;
}

.swatch-title {
  padding: 12px;
  text-transform: capitalize;

  h3 {
    margin: 0 0 50px;
    font-size: inherit;
    color:white;
  }
}

.color-swatch:nth-child(n+7) {
  color: #fff;
}

.color-swatch {
  box-sizing: border-box;
  min-width: 360px;
  padding: 12px;
  display: block;
  font-weight: bold;
}
